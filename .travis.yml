## Documentation: http://docs.travis-ci.com/user/languages/julia/
language: julia

sudo: required

julia:
  - 1.0.5
  - 1.2.0
  - 1.3.0
  - nightly
notifications:
  email: false
git:
  depth: false

codecov: true
coveralls: true

env:
  global:
    - JULIA_DEBUG=CUDAapi

## uncomment the following lines to allow failures on nightly julia
## (tests will run but not make your overall status red)
matrix:
  allow_failures:
  - julia: nightly
  - julia: 1.3.0
  include:
  # linux builds
    # - env: CUDA=8.0
    #   os: linux
    #   dist: xenial
    # - env: CUDA=9.0
    #   os: linux
    #   dist: xenial
    # - env: CUDA=9.1
    #   os: linux
    #   dist: xenial
    # - env: CUDA=9.2
    #   os: linux
    #   dist: xenial
    - env: CUDA=10.0
      os: linux
      dist: xenial

install:
  - chmod +x .travis.linux; ./.travis.linux;
  # - if [[ $TRAVIS_OS_NAME == "linux" ]]; then chmod +x .travis.linux ./.travis.linux; fi
  # - sudo apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub

  # - declare -A installers
  # - installers["8.0"]="http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/cuda-repo-ubuntu1604_8.0.61-1_amd64.deb"
  # - installers["9.0"]="http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/cuda-repo-ubuntu1604_9.0.176-1_amd64.deb"
  # - installers["9.1"]="http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/cuda-repo-ubuntu1604_9.1.85-1_amd64.deb"
  # - installers["9.2"]="http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/cuda-repo-ubuntu1604_9.2.148-1_amd64.deb"
  # - installers["10.0"]="http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/cuda-repo-ubuntu1604_10.0.130-1_amd64.deb"

  # - declare -A components
  # - components["8.0"]="cuda-drivers cuda-core-8-0 cuda-cudart-dev-8-0"
  # - components["9.0"]="cuda-drivers cuda-core-9-0 cuda-cudart-dev-9-0"
  # - components["9.1"]="cuda-drivers cuda-core-9-1 cuda-cudart-dev-9-1" 
  # - components["9.2"]="cuda-drivers cuda-core-9-2 cuda-cudart-dev-9-2" 
  # - components["10.0"]="cuda-drivers cuda-core-10-0 cuda-cudart-dev-10-0"

  # - installer=${installers[$CUDA]}
  # - wget -O cuda.deb "$installer"

  # - sudo dpkg -i cuda.deb

  # - sudo apt-get update
  # - sudo apt-get install -y ${components[$CUDA]}


## uncomment and modify the following lines to manually install system packages
#addons:
#  apt: # apt-get for linux
#    packages:
#    - gfortran
#before_script: # homebrew for mac
#  - if [ $TRAVIS_OS_NAME = osx ]; then brew install gcc; fi

## uncomment the following lines to override the default test script
# script:
#  - julia --project -e 'using Pkg; Pkg.instantiate(); Pkg.build(); Pkg.test(; coverage=true)'
# after_success:
#   # push coverage results to Coveralls
#   - julia --project -e 'using Pkg; import FCANN; pathof(FCANN); Pkg.add("Coverage"); using Coverage; Coveralls.submit(Coveralls.process_folder())'
#   # push coverage results to Codecov
#   - julia --project -e 'using Pkg; import FCANN; pathof(FCANN); Pkg.add("Coverage"); using Coverage; Codecov.submit(Codecov.process_folder())'
