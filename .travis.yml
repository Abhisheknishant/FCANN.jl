## Documentation: http://docs.travis-ci.com/user/languages/julia/
language: julia

sudo: required

julia:
  - 1
  - 1.2.0
  - 1.3.0
  - nightly

os:
  - linux
  - osx
  - windows

notifications:
  email: false
git:
  depth: false

# codecov: true
# coveralls: true

env:
  global:
    - JULIA_DEBUG=CUDAapi

## uncomment the following lines to allow failures on nightly julia
## (tests will run but not make your overall status red)
allow_failures:
  - julia: nightly
  - julia: 1.3.0

matrix: 
  include:
  # linux builds
    - env: CUDA=8.0
      os: linux
      dist: xenial
      julia: 1
    - env: CUDA=9.0
      os: linux
      dist: xenial
      julia: 1
    - env: CUDA=9.1
      os: linux
      dist: xenial
      julia: 1
    - env: CUDA=9.2
      os: linux
      dist: xenial
      julia: 1
    - env: CUDA=10.0
      os: linux
      dist: xenial
      julia: 1

install:
  - if [[ $TRAVIS_OS_NAME == "linux"]]; 
    then 
      if [[ $CUDA != "" ]];
      then
        chmod +x .travis.linux;
        ./.travis.linux; 
      fi;
    fi
  - julia -e 'using Pkg; Pkg.add(PackageSpec(url = "https://github.com/Blackbody-Research/NVIDIALibraries.jl"))'

## uncomment and modify the following lines to manually install system packages
#addons:
#  apt: # apt-get for linux
#    packages:
#    - gfortran
#before_script: # homebrew for mac
#  - if [ $TRAVIS_OS_NAME = osx ]; then brew install gcc; fi

## uncomment the following lines to override the default test script
script:
 - if [[ $CUDA != "" ]];
   then 
    export PATH=/usr/local/cuda-$CUDA/bin:$PATH
   fi;
 - julia --project -e 'using Pkg; Pkg.build(); Pkg.test(coverage=true)'

after_success:
  - julia -e 'using Pkg;
              cd(Pkg.dir("FCANN"));
              Pkg.add("Coverage");
              using Coverage;
              Codecov.submit(process_folder())'
#   # push coverage results to Coveralls
#   - julia --project -e 'using Pkg; import FCANN; pathof(FCANN); Pkg.add("Coverage"); using Coverage; Coveralls.submit(Coveralls.process_folder())'
#   # push coverage results to Codecov
#   - julia --project -e 'using Pkg; import FCANN; pathof(FCANN); Pkg.add("Coverage"); using Coverage; Codecov.submit(Codecov.process_folder())'
